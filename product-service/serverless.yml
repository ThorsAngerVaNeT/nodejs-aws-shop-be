service: product-service
frameworkVersion: '3'
useDotenv: true

provider:
  name: aws
  runtime: nodejs16.x
  stage: dev
  region: eu-west-1
  environment:
    PG_HOST: ${env:PG_HOST}
    PG_PORT: ${env:PG_PORT}
    PG_DATABASE: ${env:PG_DATABASE}
    PG_USER: ${env:PG_USER}
    PG_PASSWORD: ${env:PG_PASSWORD}
    SQS_QUEUE_URL: { Ref: catalogItemsQueue }
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - 'sqs:*'
          Resource:
            - Fn::GetAtt: [catalogItemsQueue, Arn]

resources:
  Resources:
    catalogItemsQueue:
      Type: 'AWS::SQS::Queue'
      Properties:
        QueueName: 'vanet-shop-sqs'

plugins:
  - serverless-offline
  - serverless-webpack

package:
  individually: true

functions:
  createProduct:
    handler: handlers/createProduct.handler
    events:
      - http:
          path: products
          method: post
          cors: true
  getProductsList:
    handler: handlers/getProductsList.handler
    events:
      - http:
          path: products
          method: get
          cors: true
  getProductsById:
    handler: handlers/getProductsById.handler
    events:
      - http:
          path: products/{productId}
          method: get
          cors: true
  catalogBatchProcess:
    handler: handlers/catalogBatchProcess.handler
    events:
      - sqs:
          batchSize: 5
          arn:
            Fn::GetAtt:
              - catalogItemsQueue
              - Arn

custom:
  serverless-offline:
    httpPort: 4000
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
